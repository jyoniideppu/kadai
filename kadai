import librosa
import soundfile as sf
import numpy as np
import random
import os
import csv
import msvcrt
import wave
import winsound

directory = 'C:/Users/asupa/Downloads/onseinosozaiyou'
files = [file for file in os.listdir(directory) if file.endswith(".mp3")]
output_directory = 'C:/Users/asupa/Downloads/henkanngo'  # 変換後の音声の出力ディレクトリ

target_deletion_percentage = float(input("削除する割合（％）を入力してください: "))
target_deletion_seconds = float(input("削除するための秒数を入力してください: "))
output_count = int(input("書き出す音声の数を入力してください: "))
output_csv = input("CSVファイルの名前を入力してください: ")
if not output_csv.endswith(".csv"):
    output_csv += ".csv"

def process_audio(audio_file):
    data, sr = librosa.load(audio_file, sr=None)

    total_samples = len(data)
    target_deletion_samples = int(total_samples * target_deletion_percentage / 100)
    current_deletion_samples = 0
    original_total_samples = total_samples

    while current_deletion_samples < target_deletion_samples:
        deletion_seconds = min(target_deletion_seconds, 1.0)
        deletion_samples = int(deletion_seconds * sr)

        start_sample = random.randint(0, total_samples - deletion_samples - 1)
        end_sample = start_sample + deletion_samples

        data = np.concatenate((data[:start_sample], data[end_sample:]))

        current_deletion_samples += deletion_samples

        total_samples = len(data)

    output_filename = os.path.splitext(os.path.basename(audio_file))[0] + "_converted.wav"
    output_path = os.path.join(output_directory, output_filename)

    sf.write(output_path, data, sr)

    duration_before_deletion = original_total_samples / sr
    duration_after_deletion = len(data) / sr

    return output_path, duration_before_deletion, duration_after_deletion, original_total_samples, len(data)

def write_to_csv(writer, count, spaces_pressed, audio_file, duration_before, duration_after, converted_audio_file, input_text, total_silence_before, total_silence_after):
    writer.writerow([count, spaces_pressed, audio_file, duration_before, duration_after, converted_audio_file, input_text, total_silence_before / sr, total_silence_after / sr])

count = 1
input_text = ''

with open(output_csv, 'a', newline='', encoding='shift_jis') as csvfile:
    writer = csv.writer(csvfile)
    if csvfile.tell() == 0:
        writer.writerow(['カウント', '再生した回数', '変換前音声', '削除前の音声の長さあ', '削除後の音声の長さ', '変換後音声', '入力したテキスト', '削除前の無音の時間', '削除後の無音の時間'])
    sr = 44100  
    for audio_file in random.sample(files, min(output_count, len(files))):
        converted_audio_file, duration_before, duration_after, total_silence_before, total_silence_after = process_audio(os.path.join(directory, audio_file))
        
        spaces_pressed = 0
        audio_file_name = os.path.basename(audio_file)

        while True:
            print("音声を再生するにはスペースキーを押してください。")
            key = msvcrt.getwch()
            if key == ' ' or key == '　':
                spaces_pressed += 1
                winsound.PlaySound(converted_audio_file, winsound.SND_FILENAME)
                print("もう一度再生しますか？ スペースキーを押してください。")
                key = msvcrt.getwch()
                if key != ' ' and key != '　':
                    break

        print("文字を入力してください。")
        input_text = input()

        write_to_csv(writer, count, spaces_pressed, os.path.join(directory, audio_file), duration_before, duration_after, converted_audio_file, input_text, total_silence_before, total_silence_after)
        count += 1
